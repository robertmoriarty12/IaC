name: Deploy Azure IaC Project

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project name (folder under projects/)'
        required: true
        default: 'hybrid-ad-lab'
      environment:
        description: 'Environment (dev, test, prod)'
        required: true
        default: 'dev'
      location:
        description: 'Azure region'
        required: true
        default: 'eastus'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Bicep
        run: az bicep install

      - name: Validate Template
        run: |
          az bicep build --file projects/${{ github.event.inputs.project }}/main.bicep
          echo "Template validation successful"

      - name: Create Resource Group
        run: |
          RG_NAME="${{ github.event.inputs.project }}-${{ github.event.inputs.environment }}-rg"
          az group create --name $RG_NAME --location ${{ github.event.inputs.location }} --tags "Project=${{ github.event.inputs.project }}" "Environment=${{ github.event.inputs.environment }}"

      - name: Deploy Infrastructure
        run: |
          RG_NAME="${{ github.event.inputs.project }}-${{ github.event.inputs.environment }}-rg"
          az deployment group create \
            --resource-group $RG_NAME \
            --template-file projects/${{ github.event.inputs.project }}/main.bicep \
            --parameters @projects/${{ github.event.inputs.project }}/main.parameters.json \
            --parameters projectName=${{ github.event.inputs.project }} \
            --parameters environment=${{ github.event.inputs.environment }} \
            --parameters location=${{ github.event.inputs.location }}

      - name: Get VM Information
        run: |
          RG_NAME="${{ github.event.inputs.project }}-${{ github.event.inputs.environment }}-rg"
          echo "=== DEPLOYMENT COMPLETE ==="
          echo "Resource Group: $RG_NAME"
          echo ""
          echo "VM Public IPs:"
          az vm list-ip-addresses --resource-group $RG_NAME --output table
          echo ""
          echo "Connection Details:"
          echo "Username: labadmin"
          echo "Password: P@ssword123!"
