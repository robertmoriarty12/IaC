name: Deploy VMs

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
      location:
        description: 'Azure region'
        required: true
        default: 'eastus'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy with PowerShell
        shell: pwsh
        run: |
          $RGName = "hybrid-ad-lab-${{ github.event.inputs.environment }}-rg"
          $Location = "${{ github.event.inputs.location }}"
          
          # Create resource group
          New-AzResourceGroup -Name $RGName -Location $Location -Force
          
          # Deploy the template
          New-AzResourceGroupDeployment `
            -ResourceGroupName $RGName `
            -TemplateFile "projects/hybrid-ad-lab/main.bicep" `
            -TemplateParameterFile "projects/hybrid-ad-lab/main.parameters.json" `
            -projectName "hybrid-ad-lab" `
            -environment "${{ github.event.inputs.environment }}" `
            -location $Location
          
          Write-Host "âœ… Deployment completed successfully!"

      - name: Show Results
        shell: pwsh
        run: |
          $RGName = "hybrid-ad-lab-${{ github.event.inputs.environment }}-rg"
          
          Write-Host "=== DEPLOYMENT COMPLETE ==="
          Write-Host "Resource Group: $RGName"
          Write-Host ""
          
          Write-Host "VMs created:"
          Get-AzVM -ResourceGroupName $RGName | Select-Object Name, @{Name="Size";Expression={$_.HardwareProfile.VmSize}}, @{Name="Status";Expression={$_.PowerState}} | Format-Table
          
          Write-Host ""
          Write-Host "Public IPs:"
          Get-AzVM -ResourceGroupName $RGName | ForEach-Object {
            $pip = Get-AzPublicIpAddress -ResourceGroupName $RGName | Where-Object {$_.Name -like "*$($_.Name)*"}
            [PSCustomObject]@{
              VM = $_.Name
              PublicIP = $pip.IpAddress
            }
          } | Format-Table
          
          Write-Host ""
          Write-Host "Connection Details:"
          Write-Host "Username: labadmin"
          Write-Host "Password: P@ssword123!"
